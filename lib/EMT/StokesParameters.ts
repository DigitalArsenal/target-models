// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class StokesParameters {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StokesParameters {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStokesParameters(bb:flatbuffers.ByteBuffer, obj?:StokesParameters):StokesParameters {
  return (obj || new StokesParameters()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStokesParameters(bb:flatbuffers.ByteBuffer, obj?:StokesParameters):StokesParameters {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StokesParameters()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

I():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

Q():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

U():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

V():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startStokesParameters(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addI(builder:flatbuffers.Builder, I:number) {
  builder.addFieldFloat64(0, I, 0.0);
}

static addQ(builder:flatbuffers.Builder, Q:number) {
  builder.addFieldFloat64(1, Q, 0.0);
}

static addU(builder:flatbuffers.Builder, U:number) {
  builder.addFieldFloat64(2, U, 0.0);
}

static addV(builder:flatbuffers.Builder, V:number) {
  builder.addFieldFloat64(3, V, 0.0);
}

static endStokesParameters(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStokesParameters(builder:flatbuffers.Builder, I:number, Q:number, U:number, V:number):flatbuffers.Offset {
  StokesParameters.startStokesParameters(builder);
  StokesParameters.addI(builder, I);
  StokesParameters.addQ(builder, Q);
  StokesParameters.addU(builder, U);
  StokesParameters.addV(builder, V);
  return StokesParameters.endStokesParameters(builder);
}
}
